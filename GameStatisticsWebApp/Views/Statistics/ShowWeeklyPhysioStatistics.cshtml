@model GameStatisticsWebApp.Models.ViewModel
@{
    ViewBag.Title = "User Statistics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Switch between weekly and daily stats
    Gives a call to the controller which sends the new view
    -->

<br />
<h2>Statistics for user: @Model.User.UserId</h2>
<br />
<button runat="server" id=tab1 OnClick="location.href='@Url.Action("ShowWeeklyPhysioStatistics", "Statistics", new { userId = Model.User.UserId })'" CommandArgument='@Model.User.UserId'>Weekly Statistics</button>
<button runat="server" id=tab2 OnClick="location.href='@Url.Action("ShowDailyPhysioStatistics", "Statistics", new { userId = Model.User.UserId })'" CommandArgument='@Model.User.UserId'>Daily Statistics</button>

<!--
    Page navigation is done with javascript. Javascript file pagination.js in Scripts handles the pagination
-->
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li id="previous-page"><a href="javascript:void(0)" aria-label=Previous><span aria-hidden=true>&laquo;</span></a></li>
    </ul>
</nav>

<!--
    For each item in loop, create a new page
-->
<div id="loop">

    <!--
        For each loops to display the items of the model lists
    -->
    @foreach (var item in Model.StatisticsWeek)
    {
        <div class="list-group">
            <a href="javascript:void(0)" class="list-group-item active">
                <h4 class="list-group-item-heading">
                    Week: @item.StartingDate.ToShortDateString() - @item.EndingDate.ToShortDateString()
                </h4>

                @foreach (var gameItem in item.Game)
                {

                    <h4 class="list-group-item-heading">
                        Game Name: @gameItem.Name
                    </h4>

                    foreach (var statisticsItem in gameItem.Statistics)
                    {

                        <p class="list-group-item-text">
                            Total number of Repetitions: @statisticsItem.Repetitions
                            <br />
                            Total playing time: @statisticsItem.TotalPlayingTime
                            <br />
                            Score: @statisticsItem.GameScore
                            <br />
                            Movement velocity: @statisticsItem.MoveVelocityAverage
                            <br />
                            Range of motion of repetitions. Minimum: @statisticsItem.MoveRangeMinimum, Maximum: @statisticsItem.MoveRangeMaximum, Average: @statisticsItem.MoveRangeAverage
                            <br />
                            Number of pauses: @statisticsItem.NumberOfPauses
                            <br />
                            Length of pauses: @statisticsItem.PauseLength
                            <br />
                        </p>
                        <br />
                    }
                }
            </a>
        </div>

    }
</div>
<br />

<br />
<button id="index" onclick="location.href='@Url.Action("Index", "Statistics")'">Back to Start</button>

